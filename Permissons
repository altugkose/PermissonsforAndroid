    private lateinit var permissonLauncher : ActivityResultLauncher<String>
    private lateinit var activityResultLauncher: ActivityResultLauncher<Intent>
    private var secilenGorsel : Uri? = null //data/data/media/image.jpg gibi bir URL tutan veri tipi
    private var secilenBitmap : Bitmap? = null // görsel yada ses gibi diğer veri tiplerine çeviren veri tipi



fun resimSec(view: View){

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU){
            //izin verilip verilmediğini soran kod kalıbı.
            if (ContextCompat.checkSelfPermission(requireContext(),Manifest.permission.READ_MEDIA_IMAGES) != PackageManager.PERMISSION_GRANTED){
                //izin verilmemiş ise izin istememiz.
                if (ActivityCompat.shouldShowRequestPermissionRationale(requireActivity(),Manifest.permission.READ_MEDIA_IMAGES)){
                    //Eğer true dönüyorsa, Snackbar göstererek neden izin istediğimizi tekrar belirtmemiz gerekiyor.
                    Snackbar.make(view,"Galeri'ye erişerek görsel seçilmesi gerekiyor",Snackbar.LENGTH_INDEFINITE).setAction(
                        "İzin Ver",
                        View.OnClickListener {
                            //izin isteyeceğiz.
                            permissonLauncher.launch(Manifest.permission.READ_MEDIA_IMAGES)
                        }

                    ).show()

                } else{
                    //izin isteyeceğiz
                    permissonLauncher.launch(Manifest.permission.READ_MEDIA_IMAGES)

                }

            }
            //izin verilmiş, direkt olarak galeriye erişebiliriz.
            else{
                val intentToGalerry = Intent(Intent.ACTION_PICK,MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
                activityResultLauncher.launch(intentToGalerry)
            }

        }
        else{
            //izin verilip verilmediğini soran kod kalıbı.
            if (ContextCompat.checkSelfPermission(requireContext(),Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED){
                //izin verilmemiş ise izin istememiz.
                if (ActivityCompat.shouldShowRequestPermissionRationale(requireActivity(),Manifest.permission.READ_EXTERNAL_STORAGE)){
                    //Eğer true dönüyorsa, Snackbar göstererek neden izin istediğimizi tekrar belirtmemiz gerekiyor.
                    Snackbar.make(view,"Galeri'ye erişerek görsel seçilmesi gerekiyor",Snackbar.LENGTH_INDEFINITE).setAction(
                        "İzin Ver",
                        View.OnClickListener {
                            //izin isteyeceğiz.
                            permissonLauncher.launch(Manifest.permission.READ_EXTERNAL_STORAGE)
                        }

                    ).show()

                } else{
                    //izin isteyeceğiz
                    permissonLauncher.launch(Manifest.permission.READ_EXTERNAL_STORAGE)

                }

            }
            //izin verilmiş, direkt olarak galeriye erişebiliriz.
            else{
                val intentToGalerry = Intent(Intent.ACTION_PICK,MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
                activityResultLauncher.launch(intentToGalerry)
            }
        }


    }

    //Galeriden seçilen veriyi kullanmak için gereken kısım.

    fun registerLauncher(){
        activityResultLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()){ result ->
            if (result.resultCode == AppCompatActivity.RESULT_OK){
                val intenFromData = result.data
                if (intenFromData != null){
                    secilenGorsel=intenFromData.data
                    try {
                        if (Build.VERSION.SDK_INT >= 28){
                            //Yeni yöntem
                            val source = ImageDecoder.createSource(requireActivity().contentResolver,secilenGorsel!!)
                            secilenBitmap = ImageDecoder.decodeBitmap(source)
                            binding.imageView.setImageBitmap(secilenBitmap)
                        }
                        else{
                            //Eski yöntem
                            secilenBitmap = MediaStore.Images.Media.getBitmap(requireActivity().contentResolver,secilenGorsel)
                            binding.imageView.setImageBitmap(secilenBitmap)
                        }
                    }
               catch (e: Exception) {
                   println(e.localizedMessage)
               }

                }
            }

        }
        //İzin alındıktan sonra Galeriye erişemek için gereken kısım!!
        permissonLauncher = registerForActivityResult(ActivityResultContracts.RequestPermission()){ result ->
            if (result){
                //izin verildi, galeriye  gidebiliriz.
                val intentToGalerry = Intent(Intent.ACTION_PICK,MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
                activityResultLauncher.launch(intentToGalerry)
            }
            else{
                Toast.makeText(requireContext(),"İzin verilmedi!",Toast.LENGTH_LONG).show()
            }
        }
    }
